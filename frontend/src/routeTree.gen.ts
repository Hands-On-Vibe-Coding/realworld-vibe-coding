/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as EditorImport } from './routes/editor'
import { Route as indexImport } from './routes/index'
import { Route as ProfileUsernameImport } from './routes/profile.$username'
import { Route as ArticleSlugImport } from './routes/article.$slug'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const EditorRoute = EditorImport.update({
  path: '/editor',
  getParentRoute: () => rootRoute,
} as any)

const indexRoute = indexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUsernameRoute = ProfileUsernameImport.update({
  path: '/profile/$username',
  getParentRoute: () => rootRoute,
} as any)

const ArticleSlugRoute = ArticleSlugImport.update({
  path: '/article/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof indexImport
      parentRoute: typeof rootRoute
    }
    '/editor': {
      id: '/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/article/$slug': {
      id: '/article/$slug'
      path: '/article/$slug'
      fullPath: '/article/$slug'
      preLoaderRoute: typeof ArticleSlugImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username': {
      id: '/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof indexRoute
  '/editor': typeof EditorRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/article/$slug': typeof ArticleSlugRoute
  '/profile/$username': typeof ProfileUsernameRoute
}

export interface FileRoutesByTo {
  '/': typeof indexRoute
  '/editor': typeof EditorRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/article/$slug': typeof ArticleSlugRoute
  '/profile/$username': typeof ProfileUsernameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof indexRoute
  '/editor': typeof EditorRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/article/$slug': typeof ArticleSlugRoute
  '/profile/$username': typeof ProfileUsernameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/editor' | '/login' | '/register' | '/article/$slug' | '/profile/$username'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/editor' | '/login' | '/register' | '/article/$slug' | '/profile/$username'
  id: '__root__' | '/' | '/editor' | '/login' | '/register' | '/article/$slug' | '/profile/$username'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  indexRoute: typeof indexRoute
  EditorRoute: typeof EditorRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ArticleSlugRoute: typeof ArticleSlugRoute
  ProfileUsernameRoute: typeof ProfileUsernameRoute
}

const rootRouteChildren: RootRouteChildren = {
  indexRoute: indexRoute,
  EditorRoute: EditorRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ArticleSlugRoute: ArticleSlugRoute,
  ProfileUsernameRoute: ProfileUsernameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */